name = 'Katabatic'
version = '1.1'
author = 'Deucebag and SLoW'
description = ('A remake of the classic Tribes 2 map Katabatic.')
fog = (170, 170, 170)

# scripting

from random import randrange, choice
from pyspades.constants import *
from pyspades.server import ServerConnection
from commands import say

def get_entity_location(team, entity_id):
    if entity_id == BLUE_FLAG:
        # puts only the blue flag in the blue base
        z = team.protocol.map.get_z(130, 123)
        return (130, 123, z)
    if entity_id == BLUE_BASE:
        # puts only the blue flag in the blue base
        z = team.protocol.map.get_z(100, 100)
        return (130, 130, z)
    if entity_id == GREEN_FLAG:
        # puts only the green flag in the green base
        z = team.protocol.map.get_z(392, 306)
        return (392, 306, z)
    if entity_id == GREEN_BASE:
        # puts only the blue flag in the blue base
        z = team.protocol.map.get_z(408, 330)
        return (399, 306, z)

def get_spawn_location(connection):
    if connection.team is connection.protocol.blue_team:
        x, y, z = ServerConnection.get_spawn_location(connection)
        positions = [(130, 123), (222, 269)]
        xdif = randrange(-30, 30)
        ydif = randrange(-30, 30)
        x, y = choice(positions)
        newx = max(0, min(511, x + xdif))
        newy = max(0, min(511, y + ydif))
        newz = connection.protocol.map.get_z(newx, newy)
        return (newx, newy, newz)

    if connection.team is connection.protocol.green_team:
        x, y, z = ServerConnection.get_spawn_location(connection)
        x, y, z = ServerConnection.get_spawn_location(connection)
        positions = [(392, 306), (350, 153)]
        xdif = randrange(-30, 30)
        ydif = randrange(-30, 30)
        x, y = choice(positions)
        newx = max(0, min(511, x + xdif))
        newy = max(0, min(511, y + ydif))
        newz = connection.protocol.map.get_z(newx, newy)
        return (newx, newy, newz)